#include <Arduino.h>
#include <BluetoothSerial.h> // Додаємо бібліотеку для Bluetooth

BluetoothSerial SerialBT; // Створюємо об’єкт для Bluetooth

// Визначення пінів
#define POWER_BUTTON_PIN 23 // GPIO23 -> блокування кнопки включення (команди ON/OFF)
#define BUTTON_PIN_1 27     // GPIO27 -> команда "7"
#define BUTTON_PIN_2 32     // GPIO32 -> команда "6"
#define BUTTON_PIN_3 33     // GPIO33 -> команда "5"
#define BUTTON_PIN_4 25     // GPIO25 -> команда "4"
#define BUTTON_PIN_5 26     // GPIO26 -> команда "3"
#define BUTTON_PIN_6 13     // GPIO13 -> команда "2"
#define BUTTON_PIN_7 14     // GPIO14 -> команда "1"
#define SENSE_PIN 36        // GPIO36 -> ADC1_CH0 для вимірювання напруги

// Масив пінів для імітації натискання кнопок
const int buttonPins[] = {BUTTON_PIN_1, BUTTON_PIN_2, BUTTON_PIN_3, BUTTON_PIN_4, BUTTON_PIN_5, BUTTON_PIN_6, BUTTON_PIN_7};
const int numButtons = 7;

void setup()
{
    Serial.begin(115200);
    delay(100); // Даємо час на ініціалізацію Serial
    Serial.println("ESP32 started. Send 'ON'/'OFF' for power button, '1' to '7' to activate buttons (CRLF required).");

    // Ініціалізація Bluetooth
    SerialBT.begin("ESP32_Massager"); // Ім’я Bluetooth-пристрою
    Serial.println("Bluetooth started. Pair with ESP32_Massager");

    // Ініціалізація пінів для імітації натискання
    for (int i = 0; i < numButtons; i++)
    {
        pinMode(buttonPins[i], OUTPUT);
        digitalWrite(buttonPins[i], LOW);
    }

    // Ініціалізація піна для блокування кнопки включення
    pinMode(POWER_BUTTON_PIN, OUTPUT);
    digitalWrite(POWER_BUTTON_PIN, LOW); // Початково кнопка заблокована
    Serial.println("Power button disabled (LOW) at startup");

    // Ініціалізація піна для вимірювання напруги
    pinMode(SENSE_PIN, INPUT);
}

void activateButton(int pin)
{
    digitalWrite(pin, HIGH); // Увімкнути транзистор (імітація натискання)
    Serial.println("Button on GPIO " + String(pin) + " activated (HIGH)");
    SerialBT.println("Button on GPIO " + String(pin) + " activated (HIGH)"); // Повідомлення через Bluetooth
    delay(100);                                                              // Тримаємо 100 мс
    digitalWrite(pin, LOW);                                                  // Вимкнути транзистор
    Serial.println("Button on GPIO " + String(pin) + " deactivated (LOW)");
    SerialBT.println("Button on GPIO " + String(pin) + " deactivated (LOW)");
}

void measureVoltage()
{
    // Усереднення для зменшення шуму
    long sum = 0;
    for (int i = 0; i < 50; i++)
    {
        sum += analogRead(SENSE_PIN);
        delay(1);
    }
    float voltage = (sum / 50.0) * (3.3 / 4095.0); // Переведення в вольти

    Serial.print("GPIO36 voltage: ");
    Serial.println(voltage, 2);
    SerialBT.print("GPIO36 voltage: "); // Повідомлення через Bluetooth
    SerialBT.println(voltage, 2);

    if (voltage > 1.80)
    {
        Serial.println("Device SLEEP");
        SerialBT.println("Device SLEEP");
    }
    else if (voltage >= 0.09 && voltage <= 1.80)
    {
        Serial.println("Device ON");
        SerialBT.println("Device ON");
    }
    else
    {
        Serial.println("Device OFF");
        SerialBT.println("Device OFF");
    }
}

void processCommand(String command)
{
    command.replace("\r", "");
    command.trim();
    Serial.println("Trimmed command: [" + command + "]");
    SerialBT.println("Trimmed command: [" + command + "]");

    // Перевірка команд для блокування кнопки включення
    if (command == "ON")
    {
        digitalWrite(POWER_BUTTON_PIN, HIGH); // Розблокувати кнопку
        Serial.println("Power button enabled (HIGH)");
        SerialBT.println("Power button enabled (HIGH)");
    }
    else if (command == "OFF")
    {
        digitalWrite(POWER_BUTTON_PIN, LOW); // Заблокувати кнопку
        Serial.println("Power button disabled (LOW)");
        SerialBT.println("Power button disabled (LOW)");
    }
    else if (command >= "1" && command <= "7")
    {
        int buttonIndex = command.toInt() - 1;
        activateButton(buttonPins[buttonIndex]);
    }
    else
    {
        Serial.println("Unknown command. Send 'ON'/'OFF' for power button, '1' to '7' for other buttons.");
        SerialBT.println("Unknown command. Send 'ON'/'OFF' for power button, '1' to '7' for other buttons.");
    }
}

void loop()
{
    // Вимірювання напруги
    measureVoltage();

    // Обробка команд із Serial (USB)
    if (Serial.available())
    {
        String command = Serial.readStringUntil('\n');
        Serial.println("Raw command received via Serial: [" + command + "]");
        processCommand(command);
    }

    // Обробка команд із Bluetooth
    if (SerialBT.available())
    {
        String command = SerialBT.readStringUntil('\n');
        Serial.println("Raw command received via Bluetooth: [" + command + "]");
        SerialBT.println("Raw command received via Bluetooth: [" + command + "]");
        processCommand(command);
    }

    delay(100);
}